<?php

/**
 * @file better_contextual.module
 * Improves contextual links.
 */

/**
 * Implements hook_page_build().
 *
 * Add stylesheet which forces the style of contextual links not to be
 * overriden.
 */
function better_contextual_page_build(&$page) {
  if (user_access('access contextual links')) {
    drupal_add_css(drupal_get_path('module', 'better_contextual') . '/better_contextual.css');
    drupal_add_js(drupal_get_path('module', 'better_contextual') . '/better_contextual.js');
  }
}

/**
 * Implements hook_menu_alter().
 *
 * Redfine all node/term/block entity links to be visible in both page and
 * inline contexts.
 */
function better_contextual_menu_alter(&$items) {
  foreach ($items as $path => $item) {
    // Skip items which should never be visible, such as the /view.
    if (isset($item['context']) && $item['context'] === MENU_CONTEXT_NONE) {
      continue;
    }
    // Set all node/term/block menu items to be visible on page and inline
    // displays.
    if (preg_match('/^(node\/%node|taxonomy\/term\/%taxonomy_term|block\/%bean_delta|user\/%user)\//', $path)) {
      $items[$path]['context'] = MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE;
    }
  }
}

/**
 * Implements hook_node_view_alter().
 *
 * Add the contextual links also for full node pages.
 */
function better_contextual_node_view_alter(&$build) {
  if (!empty($build['#node']->nid) && !isset($build['#contextual_links'])) {
    $build['#contextual_links']['node'] = array('node', array($build['#node']->nid));
  }
}

/**
 * Implements hook_user_view_alter().
 *
 * Add the contextual links also for full user pages.
 */
function better_contextual_user_view_alter(&$build) {
  if (!empty($build['#account']->uid) && !isset($build['#contextual_links'])) {
    $build['#contextual_links']['user'] = array('user', array($build['#account']->uid));
  }
}

/**
 * Implements hook_taxonomy_term_view_alter().
 *
 * Add contextual links to term views.
 */
function better_contextual_taxonomy_term_view_alter(&$build) {
  $build['#contextual_links']['taxonomy'] = array('taxonomy/term', array($build['#term']->tid));
}

/**
 * Implements hook_block_view_alter().
 */
function better_contextual_block_view_alter(&$build, $block) {
  switch ($block->module) {
    case 'bean':
      // Bean module sets a trailing edit argument which removes the actual
      // link to edit.
      $build['content']['#contextual_links']['bean'] = array('block', array($block->delta));
      break;
  }
}

/**
 * Implements hook_contextual_preprocess_html().
 */
function better_contextual_preprocess_html(&$variables) {
  global $theme_key;
  // Enable contextual links cross-site
  if (user_access('contextual links') && $theme_key == variable_get('theme_default')) {
    $page['#attached']['library'][] = array('contextual', 'contextual-links');
  }
}
